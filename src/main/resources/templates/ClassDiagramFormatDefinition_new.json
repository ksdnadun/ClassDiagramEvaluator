{
   "definitions": {}, 
   "$schema": "http://json-schema.org/draft-06/schema#", 
   "$id": "http://example.com/example.json", 
   "type": "object", 
   "properties": {
     "ModelType": {
       "$id": "/properties/ModelType", 
       "type": "string", 
       "title": "The Modeltype Schema", 
       "description": "This explains the diagram type. Sofar type Classdiagram supports.", 
       "default": "", 
       "examples": [
         "ClassDiagram"
       ]
     }, 
     "ModelElements": {
       "$id": "/properties/ModelElements", 
       "type": "array", 
       "items": {
         "$id": "/properties/ModelElements/items", 
         "type": "object", 
         "properties": {
           "id": {
             "$id": "/properties/ModelElements/items/properties/id", 
             "type": "integer", 
             "title": "The Id Schema", 
             "description": "This is the ID of the ModelElemnet.This uses to uniquely identify the ModelElement.", 
             "default": 0, 
             "examples": [
               1
             ]
           }, 
           "type": {
             "$id": "/properties/ModelElements/items/properties/type", 
             "type": "string", 
             "title": "The Type Schema", 
             "description": "This is the ModelELement type. This can be class, interface, abstractClass", 
             "default": "class", 
             "examples": [
               "class",
		  "interface",
				  "abstractClass"
             ]
           }, 
           "elementName": {
             "$id": "/properties/ModelElements/items/properties/elementName", 
             "type": "string", 
             "title": "The Elementname Schema", 
             "description": "Name of the Element."
           }, 
           "parentElements": {
             "$id": "/properties/ModelElements/items/properties/parentElements", 
             "type": "null", 
             "title": "The Parentelements Schema", 
             "description": "This is the list of parent model elements that are associated with current model element.", 
             "default": null, 
             "examples": [
               null
             ]
           }, 
           "isAbstractClass": {
             "$id": "/properties/ModelElements/items/properties/isAbstractClass", 
             "type": "string", 
             "title": "The Isabstractclass Schema", 
             "description": "This indicates current model element is an abstract class or not.", 
             "default": "false", 
             "examples": [
               "false"
             ]
           }, 
           "childElements": {
             "$id": "/properties/ModelElements/items/properties/childElements", 
             "type": "array", 
             "items": {
               "$id": "/properties/ModelElements/items/properties/childElements/items", 
               "type": "object", 
               "properties": {
                 "childId": {
                   "$id": "/properties/ModelElements/items/properties/childElements/items/properties/childId", 
                   "type": "integer", 
                   "title": "The Childid Schema", 
                   "description": "This explains the child model elements associated with current model element.", 
                   "default": 0, 
                   "examples": [
                     2
                   ]
                 }, 
                 "relationType": {
                   "$id": "/properties/ModelElements/items/properties/childElements/items/properties/relationType", 
                   "type": "string", 
                   "title": "The Relationtype Schema", 
                   "description": "An explanation about the purpose of this instance.", 
                   "default": "", 
                   "examples": [
                     "Inheritance"
                   ]
                 }
               }
             }
           }, 
           "attributes": {
             "$id": "/properties/ModelElements/items/properties/attributes", 
             "type": "null", 
             "title": "The Attributes Schema", 
             "description": "An explanation about the purpose of this instance.", 
             "default": null, 
             "examples": [
               null
             ]
           }, 
           "behaviors": {
             "$id": "/properties/ModelElements/items/properties/behaviors", 
             "type": "array", 
             "items": {
               "$id": "/properties/ModelElements/items/properties/behaviors/items", 
               "type": "object", 
               "properties": {
                 "name": {
                   "$id": "/properties/ModelElements/items/properties/behaviors/items/properties/name", 
                   "type": "string", 
                   "title": "The Name Schema", 
                   "description": "These are the methods or the behaviors of the class.", 
                   "default": "", 
                   "examples": [
                     "quack"
                   ]
                 }, 
                 "returnType": {
                   "$id": "/properties/ModelElements/items/properties/behaviors/items/properties/returnType", 
                   "type": "string", 
                   "title": "The Returntype Schema", 
                   "description": "The return type of the method", 
                   "default": "", 
                   "examples": [
                     "void"
                   ]
                 }, 
                 "parametersInOrder": {
                   "$id": "/properties/ModelElements/items/properties/behaviors/items/properties/parametersInOrder", 
                   "type": "null", 
                   "title": "The Parametersinorder Schema", 
                   "description": "Method parameters", 
                   "default": null, 
                   "examples": [
                     null
                   ]
                 }, 
                 "isOverriden": {
                   "$id": "/properties/ModelElements/items/properties/behaviors/items/properties/isOverriden", 
                   "type": "boolean", 
                   "title": "The Isoverriden Schema", 
                   "description": "An overriden method or not", 
                   "default": false, 
                   "examples": [
                     false
                   ]
                 }, 
                 "isAbstract": {
                   "$id": "/properties/ModelElements/items/properties/behaviors/items/properties/isAbstract", 
                   "type": "boolean", 
                   "title": "The Isabstract Schema", 
                   "description": "An abstract method or not", 
                   "default": false, 
                   "examples": [
                     false
                   ]
                 }
               }
             }
           }
         }
       }
     }
   }
 }